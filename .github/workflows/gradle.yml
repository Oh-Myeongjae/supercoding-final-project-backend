# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름
name: Java CI with Gradle

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
on:
  push:
    branches: [ "feature/gitAction" ]
#  pull_request:
#    branches: [ "main" ]

permissions:
  contents: read

env:
  RESOURCE_PATH: ./src/main/resources/application.yml

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest
    env:
      SECRET_KEY_SOURCE : ${{ secrets.SECRET_KEY_SOURCE }}

    # Task의 sequence를 명시한다.
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

#      - name: Generate Environment Variables File for Properties
#        uses: microsoft/variable-substitution@v1
#        with:
#          files: ${{ env.RESOURCE_PATH }}
#        env:
#          SECRET_KEY_SOURCE : ${{ secrets.SECRET_KEY_SOURCE }}


        #빌드를 하기 위한 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      #빌드를 실행
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build